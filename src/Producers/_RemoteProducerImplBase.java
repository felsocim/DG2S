package Producers;


/**
* Producers/_RemoteProducerImplBase.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from RemoteProducer.idl
* Sobota, 2017, apríla 29 12:01:00 CEST
*/

public abstract class _RemoteProducerImplBase extends org.omg.CORBA.portable.ObjectImpl
                implements Producers.RemoteProducer, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors
  public _RemoteProducerImplBase ()
  {
  }

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("_get_type", new java.lang.Integer (0));
    _methods.put ("_get_id", new java.lang.Integer (1));
    _methods.put ("_get_count", new java.lang.Integer (2));
    _methods.put ("_get_step", new java.lang.Integer (3));
    _methods.put ("_get_refillFrequence", new java.lang.Integer (4));
    _methods.put ("_get_readyToGo", new java.lang.Integer (5));
    _methods.put ("_get_infiniteRessources", new java.lang.Integer (6));
    _methods.put ("setReadyToGo", new java.lang.Integer (7));
    _methods.put ("setInfiniteRessources", new java.lang.Integer (8));
    _methods.put ("pretype", new java.lang.Integer (9));
    _methods.put ("generate", new java.lang.Integer (10));
    _methods.put ("acquire", new java.lang.Integer (11));
    _methods.put ("toString", new java.lang.Integer (12));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // Producers/RemoteProducer/_get_type
       {
         Producers.RessourceType $result = null;
         $result = this.type ();
         out = $rh.createReply();
         Producers.RessourceTypeHelper.write (out, $result);
         break;
       }

       case 1:  // Producers/RemoteProducer/_get_id
       {
         int $result = (int)0;
         $result = this.id ();
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 2:  // Producers/RemoteProducer/_get_count
       {
         int $result = (int)0;
         $result = this.count ();
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 3:  // Producers/RemoteProducer/_get_step
       {
         int $result = (int)0;
         $result = this.step ();
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 4:  // Producers/RemoteProducer/_get_refillFrequence
       {
         int $result = (int)0;
         $result = this.refillFrequence ();
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 5:  // Producers/RemoteProducer/_get_readyToGo
       {
         boolean $result = false;
         $result = this.readyToGo ();
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 6:  // Producers/RemoteProducer/_get_infiniteRessources
       {
         boolean $result = false;
         $result = this.infiniteRessources ();
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 7:  // Producers/RemoteProducer/setReadyToGo
       {
         boolean status = in.read_boolean ();
         this.setReadyToGo (status);
         out = $rh.createReply();
         break;
       }

       case 8:  // Producers/RemoteProducer/setInfiniteRessources
       {
         boolean property = in.read_boolean ();
         this.setInfiniteRessources (property);
         out = $rh.createReply();
         break;
       }

       case 9:  // Producers/RemoteProducer/pretype
       {
         Producers.RessourceType type = Producers.RessourceTypeHelper.read (in);
         this.pretype (type);
         out = $rh.createReply();
         break;
       }

       case 10:  // Producers/RemoteProducer/generate
       {
         this.generate ();
         out = $rh.createReply();
         break;
       }

       case 11:  // Producers/RemoteProducer/acquire
       {
         int units = in.read_long ();
         char personality = in.read_char ();
         int $result = (int)0;
         $result = this.acquire (units, personality);
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 12:  // Producers/RemoteProducer/_toString
       {
         String $result = null;
         $result = this._toString ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:Producers/RemoteProducer:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }


} // class _RemoteProducerImplBase
