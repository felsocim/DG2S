module Consumers
{
    interface VectorRessource
    {
        readonly attribute long resWood;
        readonly attribute long resMarble;

        void setWood(in long units);
        void setMarble(in long units);
        void setAll(in long uWood, in long uMarble);

        boolean compare(in VectorRessource toBeCompared);
        void add(in VectorRessource operand);
        void subtract(in VectorRessource operand);
        void addExplicit(in long uWood, in long uMarble);

        string toString();
    };

    interface RemoteConsumer
    {
        readonly attribute string idConsumer;
        readonly attribute boolean readyToGo;
        readonly attribute boolean myTurn;
        readonly attribute boolean inObservation;
        readonly attribute boolean manualMode;
        readonly attribute VectorRessource resCurrent;
        readonly attribute VectorRessource resTarget;
        readonly attribute char personality;
        readonly attribute boolean gameOver;
        readonly attribute long long timeFinished;
        readonly attribute boolean stolen;
        readonly attribute RemoteConsumer thief;
        readonly attribute VectorRessource resStolen;

        void setIdConsumer(in string id);
        void setReadyToGo(in boolean status);
        void setMyTurn(in boolean go);
        void setInObservation(in boolean observation);
        void setManualMode(in boolean mode);
        void setResCurrent(in VectorRessource current);
        void setResTarget(in VectorRessource target);
        void setPersonality(in char personality);
        void setGameOver(in boolean over);
        void unstole();

        void updateRessources(in VectorRessource acquired);
        boolean stole(in VectorRessource toStole, in RemoteConsumer thief);
        boolean finished();

        string toString();
    };
};
